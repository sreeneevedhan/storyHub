{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\91944\\\\Downloads\\\\whiteJr\\\\expoPro\\\\StoryHub2\\\\App.js\",\n    _this = this;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { createAppContainer } from 'react-navigation';\nimport { createBottomTabNavigator } from 'react-navigation-tabs';\nimport WriteStoryScreen from \"./screens/WriteStoryScreen\";\nimport ReadStoryScreen from \"./screens/ReadStoryScreen\";\n\nvar App = function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    _classCallCheck(this, App);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(AppContainer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 7\n        }\n      });\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport { App as default };\nvar TabNavigator = createBottomTabNavigator({\n  WriteStory: WriteStoryScreen,\n  ReadStory: ReadStoryScreen\n}, {\n  defaultNavigationOptions: function defaultNavigationOptions(_ref) {\n    var navigation = _ref.navigation;\n    return {\n      tabBarIcon: function tabBarIcon() {\n        routeName;\n        var routeName = navigation.state.routeName;\n\n        if (routeName === \"WriteStory\") {\n          return React.createElement(Image, {\n            style: {\n              width: 40,\n              height: 40\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 11\n            }\n          });\n        } else if (routeName === \"ReadStory\") {\n          return React.createElement(Image, {\n            style: {\n              width: 40,\n              height: 40\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 11\n            }\n          });\n        }\n      }\n    };\n  }\n});\nvar AppContainer = createAppContainer(TabNavigator);\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["C:/Users/91944/Downloads/whiteJr/expoPro/StoryHub2/App.js"],"names":["React","createAppContainer","createBottomTabNavigator","WriteStoryScreen","ReadStoryScreen","App","Component","TabNavigator","WriteStory","ReadStory","defaultNavigationOptions","navigation","tabBarIcon","routeName","state","width","height","AppContainer","styles","StyleSheet","create","container","flex","backgroundColor","alignItems","justifyContent"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;AAEA,SAAQC,kBAAR,QAAiC,kBAAjC;AACA,SAAQC,wBAAR,QAAuC,uBAAvC;AACA,OAAOC,gBAAP;AACA,OAAOC,eAAP;;IAEqBC,G;;;;;;;;;;;;;WACnB,kBAAQ;AACN,aACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAGD;;;;EAL8BL,KAAK,CAACM,S;;SAAlBD,G;AAQrB,IAAME,YAAY,GAAGL,wBAAwB,CAAC;AAC5CM,EAAAA,UAAU,EAAEL,gBADgC;AAE5CM,EAAAA,SAAS,EAAEL;AAFiC,CAAD,EAI7C;AACEM,EAAAA,wBAAwB,EAAE;AAAA,QAAEC,UAAF,QAAEA,UAAF;AAAA,WAAiB;AACzCC,MAAAA,UAAU,EAAE,sBAAI;AAEdC,QAAAA,SAAS;AAEV,YAAMA,SAAS,GAAGF,UAAU,CAACG,KAAX,CAAiBD,SAAnC;;AAKC,YAAGA,SAAS,KAAK,YAAjB,EAA8B;AAC5B,iBACE,oBAAC,KAAD;AAKA,YAAA,KAAK,EAAE;AAACE,cAAAA,KAAK,EAAC,EAAP;AAAWC,cAAAA,MAAM,EAAC;AAAlB,aALP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAUD,SAXD,MAYK,IAAGH,SAAS,KAAK,WAAjB,EAA6B;AAChC,iBACE,oBAAC,KAAD;AAKA,YAAA,KAAK,EAAE;AAACE,cAAAA,KAAK,EAAC,EAAP;AAAWC,cAAAA,MAAM,EAAC;AAAlB,aALP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AASD;AACF;AAjCwC,KAAjB;AAAA;AAD5B,CAJ6C,CAA7C;AA2CA,IAAMC,YAAY,GAAGhB,kBAAkB,CAACM,YAAD,CAAvC;AAEA,IAAMW,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE,MAFR;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,cAAc,EAAE;AAJP;AADoB,CAAlB,CAAf","sourcesContent":["import React from 'react';\nimport { StyleSheet, Text, View, Image } from 'react-native';\nimport {createAppContainer} from 'react-navigation';\nimport {createBottomTabNavigator} from 'react-navigation-tabs' \nimport WriteStoryScreen from './screens/WriteStoryScreen'\nimport ReadStoryScreen from './screens/ReadStoryScreen'\n\nexport default class App extends React.Component {\n  render(){\n    return(\n      <AppContainer />\n    );\n  }\n}\n\nconst TabNavigator = createBottomTabNavigator({\n  WriteStory: WriteStoryScreen,\n  ReadStory: ReadStoryScreen\n},\n{\n  defaultNavigationOptions: ({navigation})=>({\n    tabBarIcon: ()=>{\n      \n      routeName\n    //  const routeName = navigation.routeName;\n     const routeName = navigation.state.routeName;\n    //  const routeName = navigation.state;\n    //  const routeName = state.routeName.navigation;\n       \n    \n      if(routeName === \"WriteStory\"){\n        return(\n          <Image\n         // source={require(\"assets/write.png\")}\n         // source={require(\"./write.png\")}\n         // source={require(\"./assets/write.png\")}\n         // source={require(\"write.png\")}\n          style={{width:40, height:40}}\n        />\n        )\n        \n      }\n      else if(routeName === \"ReadStory\"){\n        return(\n          <Image\n          // source={require(\"./read.png\")}\n          // source={require(\"read.png\")}\n          // source={require(\"./assets\")}\n          // source={require(\"./assets/read.png\")}\n          style={{width:40, height:40}}\n        />)\n        \n      }\n    }\n  })\n}\n  )\n\nconst AppContainer = createAppContainer(TabNavigator);\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}